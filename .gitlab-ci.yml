image: docker:dind

stages:
  - test
  - deploy

.test_template: &test_template
  script: |
    export CONTAINER_CODE_IMAGE=tabellarius-code-$((((RANDOM + RANDOM) % 63001) + 2000))

    echo -e "FROM ${DOCKER_IMAGE}\nCOPY . /code" > Dockerfile.tmp

    if [ "${START_INTEGRATION_SERVERS}" = 'yes' ]; then
      CID_IMAPSERVER=$(docker run -d -p 143 -p 993 -p 6379 -v /dev/random:/dev/random bechtoldt/tabellarius_tests-docker)
      INTEGRATION_ADDR_IMAPSERVER=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' ${CID_IMAPSERVER})
      echo -e "\nENV INTEGRATION_ADDR_IMAPSERVER=${INTEGRATION_ADDR_IMAPSERVER}" >> Dockerfile.tmp
    fi

    docker build --file=Dockerfile.tmp -t ${CONTAINER_CODE_IMAGE} .
    docker run --rm -w /code ${CONTAINER_CODE_IMAGE} /bin/bash -c "pip install tox && tox -e ${TOX_ENV}"

find-tasks:
  stage: test
  variables:
    DOCKER_IMAGE: python:latest
    TOX_ENV: app_todo
  <<: *test_template

check-code-style:
  stage: test
  variables:
    DOCKER_IMAGE: python:latest
    TOX_ENV: app_flake8
  <<: *test_template

test-integration:py3.3:
  stage: test
  variables:
    DOCKER_IMAGE: python:3.3
    START_INTEGRATION_SERVERS: 'yes'
    TOX_ENV: app_tests_min
  <<: *test_template

test-integration:py3.4:
  stage: test
  variables:
    DOCKER_IMAGE: python:3.4
    START_INTEGRATION_SERVERS: 'yes'
    TOX_ENV: app_tests_min
  <<: *test_template

test-integration:py3.5:
  stage: test
  variables:
    DOCKER_IMAGE: python:3.5
    START_INTEGRATION_SERVERS: 'yes'
    TOX_ENV: app_tests_min
  <<: *test_template
